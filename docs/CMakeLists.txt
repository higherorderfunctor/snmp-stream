FIND_PACKAGE(Doxygen REQUIRED)
FIND_PACKAGE(Sphinx REQUIRED)


# find all the public headers to depend on
GET_TARGET_PROPERTY(SNMP_STREAM_PUBLIC_HEADER_DIR _snmp_stream INTERFACE_INCLUDE_DIRECTORIES)
FILE(GLOB_RECURSE SNMP_STREAM_PUBLIC_HEADERS ${SNMP_STREAM_PUBLIC_HEADER_DIR}/*.hpp)


# set the doxygen parameters
SET(DOXYGEN_INPUT_DIR
  ${PROJECT_SOURCE_DIR}/include
)
SET(DOXYGEN_OUTPUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/doxygen)
SET(DOXYGEN_INDEX_FILE ${DOXYGEN_OUTPUT_DIR}/xml/index.xml)
SET(DOXYFILE_IN ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in)
SET(DOXYFILE_OUT ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile)


# generate the Doxyfile
CONFIGURE_FILE(${DOXYFILE_IN} ${DOXYFILE_OUT} @ONLY)


# setup the doxygen target
FILE(MAKE_DIRECTORY ${DOXYGEN_OUTPUT_DIR})
ADD_CUSTOM_COMMAND(
  OUTPUT ${DOXYGEN_INDEX_FILE}
  DEPENDS ${SNMP_STREAM_PUBLIC_HEADERS}
  COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYFILE_OUT}
  MAIN_DEPENDENCY ${DOXYFILE_OUT} ${DOXYFILE_IN}
  COMMENT "Generating docs"
)

ADD_CUSTOM_TARGET(Doxygen DEPENDS ${DOXYGEN_INDEX_FILE})


# setup the sphinx target
SET(SPHINX_SOURCE ${CMAKE_CURRENT_SOURCE_DIR})
SET(SPHINX_BUILD ${CMAKE_CURRENT_BINARY_DIR}/sphinx)

ADD_CUSTOM_TARGET(
  Sphinx
  DEPENDS Doxygen
  COMMAND
  ${SPHINX_EXECUTABLE} -b html
	-Dbreathe_projects.snmp_stream=${DOXYGEN_OUTPUT_DIR}/xml
  ${SPHINX_SOURCE} ${SPHINX_BUILD}
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
  COMMENT "Generating documentation with Sphinx"
)


# link target to docs command
ADD_CUSTOM_TARGET(docs
  DEPENDS Sphinx
)
